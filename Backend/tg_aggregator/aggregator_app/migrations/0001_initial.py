# Generated by Django 5.0.6 on 2025-08-14 13:46

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('channel', 'Channel'), ('bot', 'Bot'), ('mini_app', 'Mini App')], max_length=20)),
                ('name', models.CharField(max_length=255)),
                ('link', models.URLField(help_text='Уникальная ссылка на проект, например, https://t.me/username', max_length=500, unique=True)),
                ('theme', models.CharField(max_length=100)),
                ('icon', models.ImageField(blank=True, null=True, upload_to='avatars/')),
                ('is_premium', models.BooleanField(default=False)),
                ('likes', models.IntegerField(default=0)),
                ('subscribers', models.IntegerField(default=0)),
            ],
            options={
                'ordering': ['-is_premium', '-likes'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigIntegerField(help_text='Telegram User ID', primary_key=True, serialize=False)),
                ('username', models.CharField(blank=True, max_length=255, null=True)),
                ('stars', models.IntegerField(default=0)),
                ('balance', models.FloatField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_type', models.CharField(max_length=50)),
                ('completed', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='aggregator_app.user')),
            ],
            options={
                'unique_together': {('user', 'task_type')},
            },
        ),
    ]
